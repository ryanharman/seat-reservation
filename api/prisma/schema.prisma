// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  VIEWER
  USER
  MANAGER
  ADMIN
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  firstName    String?
  lastName     String?
  password     String
  role         Role          @default(USER)
  createdAt    DateTime?     @default(now())
  updatedAt    DateTime?     @updatedAt
  office       Office?       @relation(fields: [officeId], references: [id])
  officeId     Int?
  reservations Reservation[]
}

model Office {
  id             Int            @id @default(autoincrement())
  name           String
  activeTimes    Json
  bookingLength  Int            @default(60)
  createdAt      DateTime?      @default(now())
  updatedAt      DateTime?      @updatedAt
  bookableItems  BookableItem[]
  officeManagers User[]
}

model Reservation {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  bookedItem     BookableItem @relation(fields: [bookedItemId], references: [id])
  bookedItemId   Int
  bookedItemType String
  dateBookedFrom DateTime
  dateBookedTo   DateTime
  cancelled      Boolean      @default(false)
  isAllDay       Boolean      @default(true)
  createdAt      DateTime?    @default(now())
  updatedAt      DateTime?    @updatedAt
}

model BookableItem {
  id                  Int           @id @default(autoincrement())
  office              Office        @relation(fields: [officeId], references: [id])
  officeId            Int
  type                String        @default("Seat")
  name                String
  availableForBooking Boolean?      @default(true)
  createdAt           DateTime?     @default(now())
  updatedAt           DateTime?     @updatedAt
  reservations        Reservation[]
}
