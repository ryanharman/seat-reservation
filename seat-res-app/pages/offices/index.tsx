import React, { ReactElement } from "react";
import Head from "next/head";
import client from "../../apollo-client";
import { Office } from "../../types";
import { OfficeModal, OfficesTable } from "./components";
import { Layout, Button, PageTitle } from "../../components/ui";
import { useModalStore } from "../../stores";
import { useMutation, useQuery } from "@apollo/client";
import { useRouter } from "next/router";
import { refreshData, createOffice, getBuildings, getOffices } from "../../services";

interface OfficesProps {
  offices: Office[];
}

export default function OfficesPage({ offices }: OfficesProps) {
  const router = useRouter();
  const openModal = useModalStore((state) => state.setIsOpen);
  const [addOffice, _] = useMutation(createOffice);

  const addOfficeModal = () => {
    openModal(true, {
      cancelText: "Cancel",
      confirmText: "Save",
      content: <OfficeModal />,
      data: { officeName: "" },
      title: "Add Office",
      onConfirmAction: (data) => {
        addOffice({
          variables: {
            name: data.officeName,
            buildingId: parseInt(data.selectedBuilding.value),
          },
        });
        refreshData(router);
      },
    });
  };

  return (
    <main className="px-8 py-2">
      <Head>
        <title>Seat Reservation</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageTitle>
        Offices
        <Button primary onClick={() => addOfficeModal()}>
          Add new
        </Button>
      </PageTitle>
      <OfficesTable data={offices} />
    </main>
  );
}

OfficesPage.setLayout = function getLayout(page: ReactElement) {
  return <Layout>{page}</Layout>;
};

export async function getStaticProps() {
  const { data } = await client.query({ query: getOffices });
  return {
    props: {
      offices: data.offices,
    },
  };
}
