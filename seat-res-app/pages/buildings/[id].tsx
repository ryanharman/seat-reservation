import React, { ReactElement } from "react";
import Head from "next/head";
import client from "../../apollo-client";
import { Building, GetStaticProps, Params } from "../../types";
import { Layout, Button, Card, PageTitle } from "../../components/ui";
import { getBuilding, getBuildings } from "../../services/queries";

interface BuildingProps {
  buildingData: Building;
}

export default function BuildingPage({ buildingData }: BuildingProps) {
  return (
    <main className="px-8 py-2">
      <Head>
        <title>Seat Reservation</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageTitle margin="mb-8">
        Building
        <Button primary onClick={() => {}}>
          Edit
        </Button>
      </PageTitle>
      <Card>
        <div className="flex justify-between text-5xl">
          <div>ðŸ“ˆ</div>|<div>ðŸ“Š</div>|<div>ðŸ’¹</div>
        </div>
      </Card>
    </main>
  );
}

BuildingPage.setLayout = function getLayout(page: ReactElement) {
  return <Layout>{page}</Layout>;
};

// We prerender the pages using the static paths function due to the estimated lack of
// buildings within the database. This might not be scalable? Need to read more of the docs

export async function getStaticPaths() {
  const { data } = await client.query({ query: getBuildings });
  const paths = data.buildings.map((building: Building) => ({
    params: { id: building.id.toString() },
  }));
  return { paths, fallback: "blocking" };
}

export async function getStaticProps({ params }: GetStaticProps) {
  const data = await buildingQuery(params);
  return {
    props: {
      buildingData: data.building,
    },
  };
}

export const buildingQuery = async (params: Params) => {
  const id = parseInt(params.id);
  const { data } = await client.query({
    query: getBuilding,
    variables: { id },
  });

  return data;
};
